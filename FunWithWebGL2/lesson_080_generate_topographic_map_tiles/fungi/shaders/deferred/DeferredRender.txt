<shader>
{
	"name":"DeferredRender",
	"useModelMatrix":false,
	"useUBOTransform":true,
	"uniforms":[ "bufColor","sample2D" ]
}
</shader>,"bufDepth","sample2D"

<materials>
[
	{ "name":"MatDeferredRender","useBlending":true, "uniforms":[] }
]
</materials>
	
<vertex>
	#version 300 es
	layout(location=0) in vec4 a_position;
	layout(location=2) in vec2 a_uv;

	out highp vec2 vUV;

	uniform UBOTransform{
		mat4 matProjection;
		mat4 matCameraView;
		vec3 posCamera;
	};

	void main(void){
		vUV = vec2(a_uv.s,a_uv.t);
		gl_Position	= vec4(a_position.xyz,1.0);
	}
</vertex>

<fragment>
	#version 300 es
	precision highp float;

	in highp vec2 vUV;

	uniform sampler2D bufColor;
	//uniform sampler2D bufDepth;	

	out vec4 outColor;

	void main(void){
		ivec2 fCoord = ivec2(gl_FragCoord.xy);		//Get the Int of the current Screen pixel X,Y
	
		vec4 color = texelFetch(bufColor, fCoord , 0);
		outColor = color;
	}
</fragment>


		